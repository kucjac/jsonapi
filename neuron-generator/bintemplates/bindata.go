// Code generated by go-bindata. DO NOT EDIT.
// sources:
// templates/00_imports.tmpl
// templates/01_initialize_collections.tmpl
// templates/02_collection.tmpl
// templates/03_collection-structure.tmpl
// templates/04_collection-builder.tmpl
// templates/05_model.tmpl
// templates/06_primary.tmpl
// templates/07_fielder.tmpl
// templates/08_single-relationer.tmpl
// templates/09_multi-relationer.tmpl
// templates/10_model-definition.tmpl
// templates/11_single-file-models.tmpl
// templates/12_single-file-collections.tmpl
// templates/13_collection-definition.tmpl
// templates/14_collection-initializer.tmpl
// templates/15_collection-initializer-function.tmpl

package bintemplates


import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}


type asset struct {
	bytes []byte
	info  fileInfoEx
}

type fileInfoEx interface {
	os.FileInfo
	MD5Checksum() string
}

type bindataFileInfo struct {
	name        string
	size        int64
	mode        os.FileMode
	modTime     time.Time
	md5checksum string
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) MD5Checksum() string {
	return fi.md5checksum
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bindataTemplates00importstmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\xca\xcc\x2d\xc8\x2f\x2a\x29\x56\x52\xd0\xad\xad\xe5\xaa\xae\xd6\x55\xc8\x4c\x53\xd0\xf3\x84\x08\x82\xc5\x20\x0a\x14\x34\xb8\xaa\xab\x8b\x12\xf3\xd2\x53\x15\x54\xa0\x22\x56\xb6\x08\x85\xb5\xb5\x0a\x0a\x0a\x0a\x4a\xd5\xd5\x50\xc9\xda\x5a\x25\xae\xea\xea\xd4\xbc\x14\x90\x11\x9a\x60\x73\xa1\x1c\x18\xbb\xb6\x16\x10\x00\x00\xff\xff\x08\x20\xfd\xe4\x84\x00\x00\x00")

func bindataTemplates00importstmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates00importstmpl,
		"templates/00_imports.tmpl",
	)
}



func bindataTemplates00importstmpl() (*asset, error) {
	bytes, err := bindataTemplates00importstmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/00_imports.tmpl",
		size: 132,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1589199652, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates01initializecollectionstmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\xb1\x6e\xc3\x30\x0c\x44\x77\x7f\xc5\xc1\xbb\x95\xbd\x6b\xd3\x21\x4b\xd2\xc1\x7b\xc1\x5a\x74\x4a\x54\xa2\x0c\x89\x41\xd1\x0a\xfa\xf7\xc2\x76\x81\x14\xd9\x88\x77\x7c\xc0\x5d\xad\x9e\x67\x51\x46\x2f\x2a\x26\x14\xe4\x87\xdf\xa6\x14\x02\x4f\x26\x49\x4b\x8f\xa1\xb5\xee\x70\xc0\x73\xf2\x8c\x2b\x2b\x67\x32\xf6\x78\xff\x86\xf2\x2d\x27\x1d\xfe\x58\xca\x0e\xc7\x0b\xce\x97\x11\x2f\xc7\xd3\xe8\x56\x67\xfc\x90\x82\x59\x02\xe3\x8b\xca\x3f\x99\xec\x69\x8d\x6b\x85\x49\xe4\x62\x14\x17\xb4\xd6\x75\x0b\x4d\x9f\x74\x65\xd4\xea\x5e\xf7\xf3\x4c\x91\x5b\xeb\x6a\x95\x19\xee\x14\x97\x94\xad\x60\x03\xc6\x71\x09\x64\x6b\xf1\x1d\xf7\x70\x7b\xc2\xea\x1f\x3e\xee\x7b\x86\xfb\xca\x3c\xcc\x37\xdd\x60\x0f\xb7\x09\x60\xf5\x68\xed\x37\x00\x00\xff\xff\x89\xb2\x81\x5f\x13\x01\x00\x00")

func bindataTemplates01initializecollectionstmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates01initializecollectionstmpl,
		"templates/01_initialize_collections.tmpl",
	)
}



func bindataTemplates01initializecollectionstmpl() (*asset, error) {
	bytes, err := bindataTemplates01initializecollectionstmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/01_initialize_collections.tmpl",
		size: 275,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1589402101, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates02collectiontmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\x31\x4e\xc4\x40\x0c\x45\xfb\x9c\xe2\x2b\x15\x14\xc9\xf6\xb4\x2c\x05\xcd\x2e\x45\x2e\x60\x12\x67\xb1\x98\xf1\x44\x13\xaf\x10\x58\x73\x77\x34\x04\x89\xb0\x9d\xe5\xf7\x9f\xa5\x6f\xf7\x89\x67\x51\x46\x3b\xa6\x10\x78\x34\x49\xda\xa2\x2b\xa5\x39\x1c\xf0\x98\x26\xc6\x85\x95\x33\x19\x4f\x78\xfd\x84\xf2\x35\x27\xed\x7e\x77\x29\xf7\x38\x9e\x71\x3a\x0f\x78\x3a\x3e\x0f\x7d\x75\x86\x37\x59\x31\x4b\x60\x7c\xd0\xba\x93\xc9\x1e\x2a\x76\x87\x49\xe4\xd5\x28\x2e\x28\xa5\x69\x16\x1a\xdf\xe9\xc2\x70\xef\x5f\xb6\xf1\x44\x91\x2b\x71\x37\x8e\x4b\x20\x63\xb4\x12\x97\x94\x6d\x6d\xd1\x57\x32\x5f\x75\x84\xa8\xd8\xdd\x3d\xfc\x5f\xee\xaf\x44\x57\xb9\x50\x90\x2f\xce\x9b\x76\x73\x72\x17\xfd\x79\x81\x6c\xd5\x6b\xd2\xbd\x03\xeb\x54\xca\x77\x00\x00\x00\xff\xff\x77\x40\xd0\x6d\x1e\x01\x00\x00")

func bindataTemplates02collectiontmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates02collectiontmpl,
		"templates/02_collection.tmpl",
	)
}



func bindataTemplates02collectiontmpl() (*asset, error) {
	bytes, err := bindataTemplates02collectiontmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/02_collection.tmpl",
		size: 286,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1589401979, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates03collectionstructuretmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x54\x4d\x6f\x1a\x31\x14\xbc\xfb\x57\x4c\x73\x48\x76\x11\x38\x3d\x23\xd1\x43\x68\x8f\xa9\xd4\x56\xea\x25\xca\xc1\x78\x1f\x89\x55\xe3\xa5\xc6\x4b\x37\xb5\xfc\xdf\x2b\xdb\xbb\xb0\xac\x08\x6a\x55\xa9\xa7\x72\x30\xf2\xc7\x9b\x79\x33\x6f\xc0\xfb\x8a\xd6\xca\x10\xae\x64\xad\x35\x49\xa7\x6a\x33\xdb\x39\xdb\x48\xd7\x58\xba\xc2\x2c\x04\xc6\x6e\x6f\xe1\x3d\x5f\x1e\x1e\xf0\xaf\xc2\x2a\xb1\xd2\xf4\x51\x6c\x28\x04\xa8\x1d\xdc\x33\xe1\x88\x80\x66\x47\x15\x5c\x8d\xef\x0d\xd9\x97\x58\x7c\x5f\x57\xa4\x79\xf7\x7e\x93\x36\x6c\x2f\xec\x65\xdc\xc9\xe9\x6d\x3e\x65\xcc\xbd\x6c\x09\xe7\xae\x90\x1b\x87\x67\x00\x90\x28\x31\xd9\x88\xed\x56\x99\xa7\xdc\xc1\x97\xf4\x80\x05\xc6\xd6\x8d\x91\x50\x46\x39\x25\xb4\xfa\x49\x97\xfa\x28\xbc\x57\x6b\xf0\x0f\xad\x23\x6b\x84\x5e\xd6\xc6\xd9\xf8\xd6\x86\x20\x31\x91\x87\x2d\x3f\xde\x78\x4f\xa6\x0a\xa1\x04\x59\x5b\xdb\xae\xa1\x4d\x66\x9f\xc6\x43\xcc\x17\xb8\x00\xeb\x3d\xe9\x1d\x85\x20\xc7\x88\x43\x19\xc5\xf5\xc8\x58\x1f\xca\x44\xa4\xd6\x89\xe2\xcd\x02\x46\xe9\x8e\x3c\x7e\x2c\xb9\xc6\x9a\x78\x97\x8e\x42\x5a\xbd\xc7\x6b\xd2\x11\x02\x16\xb8\x3e\x67\xb5\x4f\xbc\xf3\x5e\x53\x86\xea\xf0\x8d\xd2\x2c\xa7\xe6\x53\x1a\xbf\xb4\x24\x1c\xe5\x8c\xe4\x40\xac\x6b\x9b\x76\xa3\xfe\x79\x9e\x4a\x71\x4a\xf8\x99\x24\xa9\x7d\xb4\xe5\x7c\x20\xca\x4c\x53\x54\xab\x8c\xce\xdf\xdf\x4d\x73\xc4\x76\xe0\x9c\x4f\x46\x24\xe5\x18\x25\x55\xdf\x35\x4a\x57\x89\x23\xdb\x15\xb3\x99\xd0\xee\x33\xd0\xc3\xe3\x49\x8e\x7a\x9b\x35\x99\x22\x53\x95\x78\x87\xb7\x03\xaf\x87\xc5\x0b\x6c\xc4\x37\x2a\x46\x18\xd3\x61\x75\x79\x28\x8c\xde\xa8\x4e\x40\x4c\x89\x15\xe6\x89\x7a\x3d\x47\xfc\x11\xc7\x83\x7a\x8c\x34\x87\xde\x8e\xf3\xcd\xeb\x2a\xeb\x8b\x80\xd5\x2a\x4b\x7e\xd5\xe6\xbe\xbd\xa1\x04\xce\x79\x39\x9c\xf1\xf5\x25\x0f\x7d\xc7\x36\xef\x69\xc3\x30\x0f\x4b\xd7\xfe\x7e\x24\xf0\x43\xb9\x67\x6c\x6d\xbd\x57\x15\x55\xb8\x91\xae\xbd\x41\xfc\x55\x50\xeb\xfe\x2a\x2e\x4b\xd7\x16\x32\x76\xd2\x61\x2d\xf3\xf7\x14\xff\x63\xf4\x67\x31\xea\x8c\x9c\xe2\xdf\xc6\xc9\xfb\x19\xd2\x3f\xe2\xaf\x00\x00\x00\xff\xff\xc1\x67\x2e\x14\xc2\x06\x00\x00")

func bindataTemplates03collectionstructuretmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates03collectionstructuretmpl,
		"templates/03_collection-structure.tmpl",
	)
}



func bindataTemplates03collectionstructuretmpl() (*asset, error) {
	bytes, err := bindataTemplates03collectionstructuretmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/03_collection-structure.tmpl",
		size: 1730,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1589401984, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates04collectionbuildertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5f\x4f\x23\x39\x12\x7f\xe7\x53\xd4\xa2\xdd\xeb\x0e\x0a\x0d\x27\x9d\xee\x21\x52\x1e\x06\x66\x77\x84\xb4\x3b\x73\x07\x73\x7b\x0f\x08\x9d\x4c\xbb\x3a\xf8\xe8\xd8\x39\xdb\x0d\x44\xad\x7c\xf7\x93\xcb\xee\x7f\x49\x27\x24\x84\xd1\x80\x76\x1f\x46\x03\xdd\xee\xaa\xf2\xaf\xaa\x7e\x55\x2e\x53\x96\x1c\x33\x21\x11\x0e\x53\x95\xe7\x98\x5a\xa1\xe4\xf1\x6d\x21\x72\x8e\xfa\x10\x8e\x17\x8b\x83\xb2\xfc\x51\x15\x16\x46\x63\x48\xe8\xf7\x93\x13\x28\xcb\xe4\xbc\x5e\x9d\xfc\xb3\x40\x3d\x3f\xf3\x9f\x2c\x16\x20\x0c\xd8\x3b\x84\xff\xb9\xa7\x10\x24\x41\x61\x90\x83\x55\x90\x6a\x64\x16\x81\x49\x0e\xf8\x84\x69\x61\xd1\xc9\x73\x6b\x05\x1a\xc8\x94\xa6\x6f\xcb\x32\xf9\x4d\x71\xcc\x93\xcf\x6c\x8a\x8b\xc5\x94\x7e\x3e\xb0\xf3\x19\x6e\x56\x6d\xac\x2e\x52\x0b\xe5\x01\x00\xd4\xaa\xc9\x90\x24\x2c\xa2\x37\xa8\xb5\xfb\xa7\xf4\xc1\xe2\xc0\xa9\xbf\x4a\xd5\x0c\x41\xa3\x2d\xb4\x34\x30\x11\x0f\x28\x83\xf9\xc6\xbd\x49\x0e\xb2\x42\xa6\x10\x77\x55\x5f\x62\x8a\xe2\x81\xd4\x1e\x6d\x32\x6a\xe0\xc5\xc7\x03\x38\xf2\x96\x78\x6d\xde\x46\xaf\x13\x3c\xc4\xfd\xd2\x93\xb0\x8f\x24\x88\x09\x36\xff\xac\x75\x6d\x31\xed\xc5\xa1\xce\x2c\xa8\x34\x2d\xb4\x46\x0e\xbc\xd0\x42\x4e\xda\x6e\x70\xbf\xce\xb4\x4a\xd1\x98\x7d\xb7\xf4\xb3\xd6\xf1\xc0\xeb\x0d\x3b\x11\x19\xac\x13\x96\x38\xbc\x7f\x18\x83\x14\x79\x58\xdc\xd9\xfa\xfa\x8f\x68\xed\x62\x67\xa0\xc8\xb8\x00\xd3\xb9\x7d\xaa\x61\x72\x91\x95\x2a\x69\xf1\xc9\x82\xca\x3a\x7e\xae\x3e\xdd\x13\x96\x73\xfb\x14\x0f\x2a\x1d\xc9\x79\xd0\xb5\xbb\xab\x49\x4e\xb5\x03\x55\x48\xdb\xd9\x83\x2c\xa6\xb7\xa8\xdd\x16\x28\x31\x40\x48\x63\x99\x4c\x43\xfe\xcc\xb4\x7a\x10\x1c\x79\x88\xfb\x7d\x77\xe4\xb4\xc7\x03\x88\x85\xb4\x7f\xff\xdb\xd0\xbb\x7c\xb0\xa7\xcf\x4f\x87\xdf\xc2\xed\xc1\xd4\x00\xdb\x85\x34\xa8\x2d\x48\x7c\x84\x68\x89\x4e\xa2\x1a\xb1\xd8\x0c\x40\x48\xab\x08\x56\x63\x95\xde\x3b\xd7\xbd\xda\xb7\x9b\x1b\x95\x7d\x01\xa5\x7f\xcd\xb8\xa3\xe3\x82\xfe\xab\xa8\x6f\x3d\x5e\x7b\xf3\x86\xd7\xf7\x3e\xe2\xa9\xb2\x35\x40\xf5\x8b\x90\xbc\x4e\x43\x96\xe7\xcb\x45\xca\x27\x63\x60\xe1\x29\xb3\xe9\x1d\x1a\x57\xf1\x5a\x34\xb3\x2f\x7a\xce\x04\x87\xdd\xf5\xcd\xd1\x92\xf2\x57\x02\x52\x8a\x7c\x6b\x28\x69\x47\x64\x83\x21\xed\xae\x41\xd8\x0a\x57\xbf\x8b\xca\xce\x67\xcd\xe9\x6a\x0d\x20\x8f\xc6\x30\x65\xf7\xe8\x91\x80\x16\x14\xe0\xb0\xc8\x51\xc6\x2d\xf3\x06\x5e\x99\x23\x47\xe1\xbe\xd4\x4c\x4e\xb0\x6d\x7f\x4b\xb3\x97\x7f\x2d\x6e\x60\xdc\x5e\x71\x2d\x6e\x92\x78\x55\xd5\x60\x35\xb4\xa6\x01\x11\x29\xf2\x10\x38\x9f\xb0\xa1\x6f\x23\xe4\x24\x5f\xe9\x6f\x02\x8f\x77\x22\xa7\x13\x36\x8e\xcf\x32\x22\xa9\xc0\xf8\x06\xa4\xb2\x90\xa9\x42\x72\x7a\xec\xe2\xca\xe1\xdd\x6d\x09\x5c\x89\x48\x73\x66\x8c\x8f\xa4\xdf\x59\x5e\xe0\x67\x75\x89\xa6\xc8\xed\xbe\xb1\xf8\x09\xa9\x2c\xbc\x81\x40\x24\x48\x76\x0b\x41\x32\xfe\x85\x11\xd8\xf6\x73\x6f\x4c\xb4\x7d\xff\x11\x73\xb4\x08\x9c\xfe\xeb\xa7\x8d\x07\xe7\x15\x03\x99\x56\xd3\xa6\x0c\x6d\x88\x85\xfd\xdc\xe6\x0d\x7a\x1f\x04\x5c\xd9\x5a\x13\x70\x6e\x51\x03\xe3\xdc\xb7\x41\x51\x46\x0f\x22\x08\xf5\xfb\x55\x89\xd6\x49\x8e\xbd\x82\xaa\x6f\xf7\x0f\x7f\x11\x98\xf3\x10\xf8\x1b\x24\xbc\x0c\xcf\x67\xea\x7e\x0b\xc7\x2d\x99\xb6\xb5\x8d\xc1\xb6\xf8\x07\xb8\xff\x7d\x87\x1a\xc3\x79\xcd\x84\x36\xf9\x51\xd8\xbb\xaa\x49\xa8\xd0\x77\x47\xb9\xc8\x07\x71\xb4\x2f\xee\xa4\xb3\x82\xdd\x58\x77\x80\x19\x56\x09\x92\x24\x89\x90\x16\x75\xc6\x52\x2c\x17\xdf\xca\x03\xaf\xed\x82\xf6\x8e\xaa\xad\x24\x49\xb2\x93\x33\xca\xd2\x57\xac\x1f\x35\xe6\x8c\x58\xde\x9d\xc5\x3d\x89\x5c\x86\x47\x06\x16\x55\xdf\x9b\xe6\x05\xc7\xb2\xac\x57\x57\xc4\x04\xc2\xbf\xaa\xdb\xbc\x6a\x81\xeb\xef\xc2\xb1\x7b\xd9\x90\xc0\x51\x4d\x19\xfa\x20\x41\xcd\xdc\x2b\x96\x37\x02\x28\x27\x0c\xda\x08\xfc\x2c\xc1\xe7\x67\x46\x4f\x5d\x76\x86\x7d\x06\x2d\xc1\x0c\xd7\x4c\x05\x03\xeb\xa8\x59\x8f\x83\x8b\x9c\xe5\xb7\xab\xbd\x77\xef\xd6\x17\x8b\xb8\x2c\xad\xfa\x55\x3d\xa2\x3e\x67\x53\xcc\x61\xf9\x7d\x65\xbf\x8b\x31\x1f\x75\x3e\xbc\x9e\x53\xd8\x0a\xb1\x0d\xa1\xb0\x39\xcc\x36\xb8\xbe\xcd\x9a\xde\xde\x0d\x55\xee\x77\xa6\x05\xbb\xcd\xd1\xef\x68\x29\x3a\xce\xe6\x17\x92\xe3\x53\xdc\x86\x86\x9e\x54\x2d\xcc\xba\x32\xf8\xec\xc6\xc6\x10\xa6\x0f\xc9\x67\x7c\xcc\xe2\x29\x9b\xcd\x84\x9c\x24\xe7\xae\xeb\xb8\x70\xe9\x2a\x59\x3e\x84\xc3\x4f\x68\xad\x90\x13\x77\xb4\x58\x06\x3f\x82\xdb\x39\x08\x67\x0c\x75\x68\xbe\xc1\x89\x82\xe2\xee\x31\x24\x63\x22\x47\x3e\x82\x9f\x1e\x0e\x09\x89\xc1\x0b\xe1\x3c\x39\x81\xf4\x0e\xd3\xfb\x56\x98\xa2\xad\x87\x4f\x4d\x58\xba\xb5\x0f\x4c\x43\x37\xce\xe1\xfa\xe6\xa8\xda\xe7\x15\x0d\x9c\xe8\x79\xdd\x63\xfe\x67\xe8\x65\x36\xad\xe6\xb6\xe1\xd7\xe0\x6e\x1a\xb9\x43\x50\xf7\x24\xaa\xfa\x88\x30\xf1\x8a\xe3\x41\x42\x6b\xce\xe6\x4e\x52\x4c\x6a\x1b\x50\x44\x06\x3f\xa8\xfb\x96\xd4\x2d\x3d\xba\xc1\xa1\x0f\x2c\x17\x9c\x0c\x08\xb6\x1d\x92\xce\x11\x44\x3f\x99\xa8\xdb\x96\x56\x70\x76\x5c\x7e\xc6\x0c\x7e\x9d\xcf\xc8\x9b\xe4\xe9\xc3\x00\xd6\xa0\x63\xe4\xb6\xee\x6c\x5c\xda\xce\x92\xe0\xa6\x31\xb0\xd9\x0c\x25\x8f\xbb\xcf\x87\x6d\x70\x07\xbb\xf2\x79\xe0\x98\xb8\xc9\xc8\xae\xf4\x1d\xb9\xbd\x2c\x8f\x01\x25\x0f\xdc\xfd\xab\x98\x0a\x0b\x06\xad\x27\xd0\x29\x7b\x12\xd3\x62\xda\x9a\xf7\xa8\xdb\xff\x62\x6a\x4d\x10\x8e\xdc\xa5\x8e\x5b\x49\x67\xd3\x30\xda\x1b\x3a\x49\x97\x9d\x63\x80\xc8\x5a\x0d\x12\x8d\x34\xe1\x8e\xb9\x6e\x54\x23\xe3\x73\xe0\x22\xcb\x50\xa3\xb4\x40\x13\x56\x95\xc1\x8c\x4d\x84\x5c\xe2\xe6\x97\x55\x74\xda\x52\x9c\xd3\xc6\xa8\xe3\x7c\x2f\x85\xbb\x65\xf8\xae\x9d\xd3\x97\x2c\x73\xd9\x5c\xfb\xd1\xf7\x4e\x9a\x8e\x5d\x91\x01\x45\xaf\x13\xb8\xb0\x60\xd8\x9c\x0a\xa4\xb9\x17\x33\x60\x06\xa6\x4c\xce\x83\x93\xa3\xd6\x91\x40\xe3\x4c\x19\x61\x95\x9e\x3b\xf1\xb7\x98\xb9\x13\xc2\x2d\x4e\x84\x94\x8e\x54\x9b\x0a\xeb\x17\xd3\xf1\x0e\x22\x6f\x46\x04\xa7\xd5\x44\xde\xb8\x3e\x80\x19\x50\x53\xe1\xd9\x98\xd2\xb3\x5a\x96\xe6\xac\x30\x98\xbc\xa9\xe8\xf1\xb6\xc5\x1e\xb1\xf7\x15\x3f\x1d\xd3\x77\x8d\xa0\x2b\x74\xaf\x9a\xa3\x4e\xd3\x4a\x91\x1f\x9d\x0f\x5c\x7c\x84\xba\xe1\x1b\xb3\x3c\x57\x8f\xc8\x5b\x4b\x0d\x09\x19\xb9\x97\x70\xdc\x1c\x3b\xff\xa1\xc5\x94\xe9\x79\xd5\xda\x9d\xf4\xbc\xc1\x42\x2b\xe9\xdf\x37\xcd\x67\x5d\xd3\xc2\xea\xc0\xb2\xe1\x46\x88\x34\xf8\x35\x6d\xc9\xd5\x93\xae\x44\x94\x9c\xbe\xdb\xf3\x5a\x85\xf6\x17\x87\x0d\x2f\xb5\x6e\xdf\x35\x40\x5c\xcf\x40\x66\x5d\xa1\xdd\xbd\x5b\x08\x1b\xda\xd8\x0c\x74\x8d\xe8\xed\xfd\x76\x6f\x0c\xbe\x69\x53\x40\x8b\x9a\x0e\x6f\x44\x53\xe6\x95\x93\x46\x74\x38\xdc\xd4\x0e\x6c\xdd\x0a\xd4\xe8\xd7\x4d\x40\xf5\x64\xbf\xf2\xdf\x8e\xb9\x2b\xb4\xbb\x9e\xe4\x5c\x71\xd0\x1c\xf5\xd9\xbc\xc9\x6d\xa3\xb4\xad\x7c\x4e\x77\x11\xed\x9b\x47\x38\x9b\xbb\x33\x15\x2b\xf2\xb0\xc6\xc1\xa9\x9c\x08\xe4\xc0\x4c\x8a\x92\x3b\x47\xc0\x85\xf4\x4f\x29\xef\x9d\x40\x8e\xd5\x4b\xa7\x94\x71\x0e\xd1\x71\x54\x95\x8e\x9a\x52\x40\xba\x92\x20\x12\x4c\x20\x3a\x16\x3c\x4a\xe0\xeb\x1d\x06\x49\x2a\x6b\x53\x0f\x75\x39\xd8\x50\x90\x98\x48\x91\x89\x94\xc9\x14\xab\x95\x4e\xaf\xab\x2a\xf4\xf9\x3a\x4e\x52\xfa\x39\x46\xda\x8a\x71\xca\x52\x64\x61\x41\x72\xa5\xb4\x75\xd1\xbf\x9e\x8a\x1a\xca\x79\x2d\xee\x09\x5e\x7c\xab\xe4\xe3\x60\x6e\x0e\x2b\xe1\xda\xb9\x7a\xb6\x0b\xf5\x88\x8c\x86\xe9\x3e\x27\x61\x3c\x86\xd3\x97\xb2\xc6\xf3\xa4\x91\x32\xe9\x88\x82\x5a\xa7\x76\x28\x91\xad\x4c\x02\x4e\x67\x76\x1e\x2c\x7e\x9e\x47\xf6\x65\x10\x07\xa3\x57\xdf\xc0\x47\x5e\x6f\x63\x43\xc6\x5c\x9f\xde\x38\x64\x5c\x7e\x75\xb1\xf1\x9f\x87\x7b\x84\xe4\x63\x9d\x91\x5d\x31\x35\x5d\xc1\x38\xc8\xfb\xeb\xe8\xa6\xc7\xa0\x3f\x56\x15\xd8\x78\x2a\xdc\xda\x89\xad\x3c\xa8\x0b\x41\xf3\x6c\x08\x7f\x59\x4a\x8d\xb2\x55\xa1\x47\x5d\xc4\xc9\x69\x23\xef\xd3\x45\xb7\x6e\x3c\xd7\x09\x06\xae\x68\x14\xaf\x96\x8d\x0d\x07\xc4\x6d\x66\x7f\x9e\x12\x8f\x9b\x55\x34\xf2\x1b\x8d\x21\xde\x30\x78\x18\x84\x53\xe7\x07\xce\x57\xa7\x32\xbe\x3e\x79\xd6\xe7\x61\x28\xd3\xb7\x4a\xf2\xd5\xbb\xce\x9e\xd9\xcd\x6b\x8d\xf8\x7a\x6d\x6d\x8f\xb5\x82\x5d\xbe\x3e\x34\xb3\x2e\x73\x95\x8b\xd4\xd9\x91\x24\x54\x02\x16\x8b\xa3\xfe\xb1\x44\xcf\xc5\xfd\x37\x18\xed\xad\x5c\x8a\x7c\xa7\xf1\x5e\x30\x75\x9b\x09\xde\x64\xd3\x04\xaf\x0e\xce\x3d\x47\x79\x55\x46\x89\x8c\xd8\x62\xc5\x81\x14\xe8\xdb\x62\x5c\xe5\xdf\x07\xce\xeb\x4c\x69\xcd\x6d\x56\x82\x66\x10\x94\x1f\x03\xe6\xa6\x51\xb5\x72\xe3\x5c\x21\xf4\x9b\xbf\x77\x74\xf5\x71\x55\x56\xef\x95\x73\x4f\x9c\xf6\x5e\x3c\xaf\xac\xbb\x16\x37\x2f\xbc\x43\x5b\xb3\x79\xaf\xad\xe6\xa1\x66\x0c\xd5\x1e\x49\x6d\xcd\x3d\xee\x93\x93\x23\xf8\xfa\xe5\xe3\x97\x51\x98\xac\x86\xa1\x41\xfd\xa5\xa0\xcb\x4f\xea\x06\xad\x82\x5b\x04\x1a\x81\x1c\x9d\xec\x47\x5d\x57\x68\x7b\x48\x89\x06\x2f\x6f\x8e\xba\x7a\x6d\xfd\x93\xba\xfe\xa4\xae\x8d\xc7\x4d\xfb\xc7\xa5\xae\x35\x9b\xff\x1e\xd4\xe5\x27\x9d\x9e\xb8\x34\x4e\xd5\x03\xf2\xfd\xc9\xeb\x92\x04\xf5\x30\x93\xd7\xf0\x06\x29\x6c\x9d\xc5\x1b\xff\x9c\xe4\x85\x1c\x44\x7f\x52\xf2\x6e\x68\xe8\x74\xf8\xd6\x98\x68\x97\x4c\xf3\x7e\x5d\x4d\xb6\xc1\x52\x4e\x85\x9f\xfe\x1f\x00\x00\xff\xff\x7e\x62\x40\x16\x33\x30\x00\x00")

func bindataTemplates04collectionbuildertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates04collectionbuildertmpl,
		"templates/04_collection-builder.tmpl",
	)
}



func bindataTemplates04collectionbuildertmpl() (*asset, error) {
	bytes, err := bindataTemplates04collectionbuildertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/04_collection-builder.tmpl",
		size: 12339,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1589400773, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates05modeltmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\xbd\xae\xc2\x30\x0c\x46\xf7\x3c\xc5\xa7\xec\x4d\xf7\xbb\xde\x32\xb0\xb4\x0c\x7d\x01\x43\xdc\x12\xd1\xfc\x28\x09\x42\x28\xca\xbb\xa3\x14\x06\x24\x36\xcb\xc7\x47\xf2\x29\xa5\x83\xe6\xc5\x38\x86\xb4\x5e\xf3\x26\xd1\xd5\x2a\xfa\x1e\xff\x5e\x33\x56\x76\x1c\x29\xb3\xc6\xf9\x09\xc7\xf7\xe8\x5d\xff\xd9\xf9\xa8\x30\x4c\x18\xa7\x19\x87\xe1\x38\xab\xe6\xcc\x57\x93\xb0\x98\x8d\xf1\xa0\xf4\x25\x53\xfe\x6b\xb8\x14\x64\x63\x39\x65\xb2\x01\xb5\x0a\x11\xe8\x72\xa3\x95\x51\x8a\x3a\xbd\xc7\x91\x2c\x37\xd2\x4e\xd9\x86\x8d\x32\x43\x1a\x1b\x7c\xcc\x49\x42\xe1\x87\xed\x4f\x77\x7b\x82\xc9\xc6\x3b\x09\x55\xab\x68\x59\xec\x74\x6b\x79\x05\x00\x00\xff\xff\xbd\x60\xb8\xfa\xe2\x00\x00\x00")

func bindataTemplates05modeltmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates05modeltmpl,
		"templates/05_model.tmpl",
	)
}



func bindataTemplates05modeltmpl() (*asset, error) {
	bytes, err := bindataTemplates05modeltmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/05_model.tmpl",
		size: 226,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1589387066, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates06primarytmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\xcd\x6e\xdc\x36\x10\xbe\xef\x53\x0c\x16\x69\x2c\x05\x5e\xa5\xb9\xba\xf0\xa1\x31\xd0\xd4\x28\x6a\x04\x71\xd0\x02\xbd\x14\x8c\x34\xf2\x12\xa1\x48\x85\xe4\xca\x5d\x10\x7c\xf7\x82\xa4\xfe\x57\x92\xb5\x4d\x8c\xc6\xa7\x35\x39\xf3\xcd\x37\xbf\x1c\x19\x93\x61\x4e\x39\xc2\xb6\x94\xb4\x20\xf2\xb8\x85\x9d\xb5\x1b\x63\x76\xf0\x42\x1c\x34\x5c\x5d\x43\xe2\x4f\x5e\xbf\x86\x1b\x51\x94\x94\x21\x68\x5a\x20\xa4\x7b\x4c\x3f\x03\xcd\xc1\x98\xe4\x8e\x14\x68\x2d\xd0\xa2\x64\x58\x20\xd7\x0a\x0a\x52\x96\x94\x3f\x24\xbf\x8b\x0c\x19\x50\xae\x51\xe6\x24\xc5\x64\x53\x11\x09\x7f\x8f\xae\xaf\xe1\x65\x0b\x62\xec\xc6\x99\xba\xc3\x83\x14\xfc\x46\x30\x86\xa9\xa6\x82\xbb\xcb\x15\xf8\x50\xa0\xde\x8b\x2c\x71\x10\x1f\x50\x1f\x24\x57\xa0\xf7\x08\xdc\xa9\x8b\xdc\xff\x4e\x5b\x50\xc8\x85\xf4\x47\x17\xad\xf9\x8b\x64\x93\x1f\x78\x0a\x91\x31\xc9\x07\x4c\x91\x56\x28\xad\x85\x57\xad\x40\x3c\x49\x2d\x8a\x41\x69\x49\xf9\x03\x98\x0d\x00\x80\xf4\xb6\x61\x6b\x4c\x32\x14\xb4\x76\xbb\x09\x1e\xde\xaa\xf7\x21\xe0\xbf\xe1\xf1\x2f\x94\xa2\xef\xdd\x97\x03\xca\xe3\xac\x6f\x4f\x11\x1c\x23\x47\x31\x7c\x12\x82\x0d\xa9\x19\x93\xd4\x52\xc9\xad\x72\x52\xd6\xd6\xc4\xde\xa1\xee\xf4\xff\x20\xec\x80\xdf\x8e\xda\x29\x76\x14\x77\x30\xc6\x9e\x70\xec\x70\x92\x1e\xe3\x00\x37\xc5\xf7\x57\xa2\xf6\xe4\x13\xc3\xe7\xe4\x3d\xb0\x31\xc9\xdf\x18\x9a\x43\x2f\xbe\xef\x85\x97\xf1\x7d\xe4\xee\x43\xd7\x2c\xf9\x06\xd7\xd7\xc0\x69\x93\xb3\x33\x62\xe2\x44\x6d\x4d\x02\x79\xd6\x9a\x1c\x53\x7a\x7b\xd4\x78\xcf\x68\x8a\xad\x44\x6d\x20\xd4\x71\x34\xe3\x82\xb5\xaf\x3c\xae\xb5\x4f\x10\x89\x1b\x0e\x4c\x9d\x98\xf8\x5a\xec\x91\x7b\x13\x65\xe0\x0a\xfa\x39\x4b\xa0\xc5\x5f\x2e\x5f\x9a\x03\x7e\xe9\x3c\xf5\x6d\xbe\xe5\x94\x6d\x9d\x8b\x33\x31\x88\xba\x18\x34\xb7\x1f\x8f\x25\x2e\x68\xc4\xb5\xc6\x84\xe6\x3b\xd4\xa1\xb7\x17\xb9\x34\x00\x75\x24\xef\xfb\x9e\x7e\xbb\x00\xde\x9f\xf6\x7e\x15\x52\xd4\x05\x30\x06\x94\x52\xc8\xf5\x6d\x14\x10\x4e\x9a\xe5\xc9\xee\x72\xf2\xe3\xd6\x6a\x8e\xa6\xda\xc7\x99\xba\x04\xf1\xd9\xbd\x87\xde\x66\x12\x9d\x24\x28\xfe\xc9\x09\x9c\x43\xa2\x9a\xa3\xe0\x3d\x27\x3c\x83\x88\x0b\xdd\x0f\x81\x6f\xd9\x78\x29\x28\x16\x7c\xcb\x2d\x13\x7e\x4b\x14\xfe\x57\xd2\x2f\x17\x58\xd7\x21\x33\x46\x12\xfe\x80\xf0\xe2\x51\x92\xb2\xc4\xcc\x6f\x11\x0d\xd0\x9f\xe1\xcc\x99\x57\xab\x58\x37\x28\x53\x64\x97\x0b\xc4\xfd\x69\x2c\x4a\x07\x67\x8c\xf2\xe3\x6e\x90\x34\x78\x63\x6d\x54\xc5\x3d\x40\xb7\xf4\x3c\x19\x01\x87\xd9\xd3\x19\xcc\xb8\xf5\x30\x93\xf9\x18\xb2\x19\x4e\xf0\xfe\x7f\xbd\xa9\xce\x10\x22\x86\xbc\xf3\xec\x67\xa6\x51\x72\xa2\x3d\xa4\x8a\xe1\x4d\x0f\x63\x07\x61\x10\xac\xd5\x70\x6b\x9f\xdf\xf4\x48\x23\x02\xda\x67\xce\xed\x4e\x0f\xb4\x42\x0e\x39\x45\x96\x25\xf3\x6d\x42\x79\x86\xff\xcc\xd9\x82\x1f\x67\xd2\xea\x23\x78\x5e\x6a\x07\x2a\x6b\xd3\x3b\x50\x9a\x4d\xf1\x0e\x56\x25\x79\x1a\x6c\x74\x3e\x95\xe8\x1d\x84\x09\xbc\x6e\x24\x0d\xeb\xfe\x3e\x25\x9c\x8f\x42\xb3\x6e\x5b\xf0\xaa\x61\x0a\x4f\xbe\xd7\x3d\x24\x3f\x97\x55\x72\x87\x8f\x79\xd4\x2c\xdf\x37\x8c\x28\x75\xcb\x2b\xc2\x68\xf6\x8b\x2b\x02\x3f\xd5\x2f\xdd\xa7\x84\xa8\x68\x86\x19\xd0\x70\x19\x6a\xe1\x0a\x2e\x7e\xf8\x78\xd1\x2e\xdd\xf5\xf7\x46\x28\x1f\x7f\x5a\xb8\x97\x25\x48\x6d\x2f\x5b\x02\x55\x00\x1d\xb8\xd2\xbe\x58\x93\xd9\x39\xaf\x66\xd5\x23\xd5\xe9\x3e\x98\xf1\x45\xd3\xd5\xae\xd3\x8a\xdb\xc7\xa8\x9e\x69\x1d\x68\x7f\xaa\x8d\xaa\xba\xa1\x92\x12\x85\x2e\xff\xad\x92\xb5\x57\x5f\x51\xe7\x03\xe1\xfe\xd0\x68\xc8\x7f\xaf\xb5\x3e\xc5\xaf\x5f\xf3\x6d\x69\x67\x98\x93\x03\xd3\x57\xff\x67\xfd\x75\x5f\x83\xdb\x4b\xe8\x75\xc7\x60\x89\xe5\x94\xb5\x6b\x53\xfd\xe3\xdf\x00\x00\x00\xff\xff\xf7\x9e\xe3\xe6\x4c\x0f\x00\x00")

func bindataTemplates06primarytmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates06primarytmpl,
		"templates/06_primary.tmpl",
	)
}



func bindataTemplates06primarytmpl() (*asset, error) {
	bytes, err := bindataTemplates06primarytmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/06_primary.tmpl",
		size: 3916,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1589281736, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates07fieldertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\xdd\x6f\xdb\x36\x10\x7f\xf7\x5f\x71\x30\xda\x46\x32\x1c\x39\x7d\xf5\xe0\x87\xb5\xc3\xb6\x3c\xac\x1d\xe6\x60\x03\x36\x0c\x03\x2b\x9d\x12\xa2\x14\xa5\x92\xb4\xb2\x82\xe0\xff\x3e\x90\xfa\xb4\x3e\x2c\x19\x69\x96\xc4\x8f\x22\xef\xf3\xf7\xbb\x3b\x9e\xb5\x8e\x30\xa6\x1c\x61\x19\x53\x64\x11\x8a\x25\x5c\x1a\xb3\xd0\xfa\x12\x5e\xa5\x07\x05\xdb\x1d\x04\xee\xcb\x66\x03\xef\xd3\x24\xa3\x0c\x41\xd1\x04\x21\xbc\xc3\xf0\x33\xd0\x18\xb4\x0e\x3e\x90\x04\x8d\x01\x9a\x64\x0c\x13\xe4\x4a\x42\x42\xb2\x8c\xf2\xdb\xe0\xc7\x42\x29\x50\xae\x50\xc4\x24\xc4\x60\x91\x13\x01\xff\xf4\x2e\xec\xe0\x4d\xad\x48\x9b\x85\x35\xf7\x13\x2a\x77\xfa\x27\x8a\xf4\x77\xc2\x0e\x38\xcf\x80\x5c\xc4\x07\x1e\x82\xa7\x75\xf0\x1b\x86\x48\x73\x14\xc6\xc0\xaa\xd6\xee\xf7\x15\x7b\x2e\x76\x58\x55\x4a\xf7\x4a\x1c\xc2\xe2\x8e\x0f\x5e\xad\x5a\x9b\x35\xa0\x10\xa9\xf0\x41\x2f\x00\x00\xe4\x3d\x55\xe1\x1d\x38\xe9\xe0\x9a\x47\xf8\xef\x5f\x57\x7f\x97\x67\x5a\x0b\xc2\x6f\x11\x5e\x15\xba\x6d\x1e\x9d\x42\xe9\xb2\x69\x6f\x84\x44\x22\x68\xfd\xaa\x25\x6e\xcc\x16\x36\x9b\xe6\x63\xe1\xb1\xbb\x6d\x7f\x02\xd5\x41\x70\xd0\x9a\xc6\x80\x5f\x4a\xd5\x81\x0d\x03\x96\x9c\xb2\xa5\x31\xee\xa8\xd2\x28\x7f\x4d\x9d\xef\xc6\x78\x5a\x23\x8f\xec\x71\x79\x76\xf3\x35\xc3\xd1\xdb\x7e\x79\xbb\x27\x65\x2d\x95\x52\xc3\xe6\x2b\xc9\x35\x70\xca\xca\x34\x20\x8f\xea\x90\x23\x8c\xc9\x81\xa9\x6d\x37\x22\x4e\x59\x99\x5a\x19\x7c\xc0\xfb\xd8\xab\x90\x78\xcf\x88\x94\xd7\x3c\x27\x8c\x46\xbf\xa4\x11\x32\x97\xc3\x35\x2c\x33\x91\xe6\x34\xc2\x08\x68\x71\x58\x80\x00\x9c\x24\xb8\x85\x8b\xd7\xf2\x62\xb9\x86\x26\x87\x9e\xef\x3b\x93\x66\x51\x50\xeb\x5a\xd6\x04\x98\xc9\xda\x29\x4e\xb5\x34\x9e\x66\xd3\xa7\x34\x65\xcf\x85\x46\x35\xf4\x05\xb0\x03\xa8\x15\x42\xa5\x40\x4c\x98\xc4\x47\xc7\xa9\x40\x68\xff\x58\xc5\xdf\x53\x7c\x12\x2e\x17\xeb\x13\xc1\xa4\xb5\xed\xc0\xad\x38\x82\xce\x4d\xd8\x41\xa7\x34\xcf\x28\xb9\xff\xa5\xda\x8e\x4b\x7c\x51\xf7\xf5\x9f\x89\xbc\x23\x9f\x18\x3a\xfd\x67\xc0\x3b\xa7\xb5\xf7\x75\xbf\x94\xf6\x3e\xd8\x8e\x6b\x7d\xf6\xe7\xc6\xed\x24\x2b\x76\x36\xd9\xa5\x9f\xfd\x9a\x3f\x2d\xdd\xf4\x80\x06\xc1\x3e\xa9\xfa\xde\xbe\xfb\xaa\x70\xcf\x68\x88\x47\x77\x5a\x96\xa5\x12\x94\xdf\x7a\x23\x23\x67\xd5\x8c\x9a\xd3\xfe\xf9\xc7\x0e\xda\x77\x0a\x32\x39\x6a\xf5\xa1\xe6\x06\xac\x59\xb9\x13\x4d\xf2\x5b\x8d\xb2\xa2\xae\x20\x4e\x05\xdc\xd2\x1c\x39\x24\x56\x66\x0b\x17\x35\xdb\xc7\x5a\x67\xf5\xbc\xf9\xc6\x75\xf5\xf2\xea\xe9\x7c\xce\x3f\x0d\xa4\x93\x88\xee\x1f\x01\xd1\xfd\x4c\x44\xd7\x90\x17\x56\x1b\x58\x7d\xf0\x50\x88\x17\xd0\x2b\x0b\xcf\x07\xfb\xe1\x9c\xe1\xda\x2e\xfd\xce\x24\x9b\xd3\x20\xad\x03\x6b\x48\x3f\xdb\x80\x9d\x27\x81\xd7\x79\x7f\xfb\xdf\xd9\xe3\xf3\x1d\xcb\x27\xdd\x72\xe9\x21\x3c\x02\x8f\xa7\xaa\xc9\x93\xeb\xd0\x7e\x3f\x6f\x2d\xaf\xed\x9e\x57\xad\x76\x54\x01\x95\xc0\x53\x7e\x99\x95\x17\x8b\x38\x66\x85\xf8\x8e\x48\x7c\x58\x98\x6f\xe6\xc4\xd9\xf4\xe3\x2e\x2d\xfe\x10\x24\xcb\x30\xb2\x3e\xc8\x23\x60\xaa\x10\x31\x82\xfb\xe2\x0e\x28\x7b\x29\x68\xa9\x29\x19\x5b\x9d\x6f\x77\x93\x5a\x87\x73\x51\x2a\x18\x4b\xc2\x14\x89\xed\x4f\x61\x92\x59\xa5\x5a\x4b\x37\x60\x5b\x14\x82\xb7\xc6\x78\xb9\x7f\x7e\x66\xad\xce\x8e\xd4\xe0\x18\x3d\xeb\x0d\xda\x20\xde\xf7\xa9\x5b\x1c\xf3\x01\x1d\x7c\x77\x58\x56\x7b\xf8\x05\x3c\x86\xbc\x4a\xc8\xf7\x4c\xa1\xe0\x44\x39\x1f\xa4\x0f\x57\x7e\x5f\x6e\x42\xe4\xed\x20\x4f\x80\x54\xd7\x0a\x9e\xb8\x0e\xae\xee\xb0\xdb\x9c\x26\xea\x82\xda\xb6\x36\x6c\x19\xae\x5e\x00\x41\x46\x5e\x5a\x67\x51\x64\x8c\x1e\xed\x77\xd5\x29\x7a\x9c\xbb\xc5\x34\x23\x6e\x7c\x8b\xb1\x98\xda\xd1\x7c\x73\x51\x03\x5b\x8e\xeb\xd7\x72\x59\x8e\xbf\xa1\xf5\x66\x34\x2b\xe5\x2c\xcc\x5b\xe8\x5b\x1b\x7e\x0b\xdc\xba\xc1\x90\x36\x0f\x5a\x6d\xa6\xc3\x8f\xb6\xfa\x6a\x58\x1e\x89\x1a\xb3\x7d\x10\x73\x66\x94\xf0\xb3\x65\xcd\x70\xac\xdd\x8c\xad\xa6\x52\x76\x2a\x19\xab\x07\x67\xa3\xcf\xf1\xba\xb5\xf5\x56\xf4\x67\x44\xf0\x5e\xc5\x8d\xef\x43\xd5\x97\xcd\x0a\x6e\x3e\xfe\xf0\x71\x0b\x12\x95\x33\x26\x43\xc2\x39\x0a\x20\xb2\x2a\x0d\xeb\x91\x43\x65\xb5\xe9\xf4\xe8\x93\xdb\xdc\x53\x27\x63\x64\xff\x7b\xec\xff\x59\x5a\x7b\x83\x75\xb7\x59\x04\x1d\x07\xc7\x56\x07\x28\xff\xef\xac\x9d\xfe\x2f\x00\x00\xff\xff\x69\x58\x61\xb3\xeb\x17\x00\x00")

func bindataTemplates07fieldertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates07fieldertmpl,
		"templates/07_fielder.tmpl",
	)
}



func bindataTemplates07fieldertmpl() (*asset, error) {
	bytes, err := bindataTemplates07fieldertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/07_fielder.tmpl",
		size: 6123,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1589388531, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates08singlerelationertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x55\x51\x6b\xdb\x30\x10\x7e\xcf\xaf\x38\x42\xd6\xc4\xc1\x71\xf6\x9c\x91\x97\x05\x36\x02\x5b\x19\x4d\xd9\xcb\x18\x43\xd8\xe7\x54\x54\x96\x8c\x24\x3b\x1b\x42\xff\x7d\x48\xb6\x95\xd8\xc9\xda\xac\xac\x30\x3f\xb5\xa7\xd3\xf7\xdd\x7d\xf7\xe9\x62\x4c\x86\x39\xe5\x08\x63\x45\xf9\x9e\xe1\x42\x22\x23\x9a\x0a\x8e\x72\x0c\x0b\x6b\x47\xc6\x2c\x60\x22\x2a\x0d\xab\x35\x24\x3e\xb2\x5c\xc2\x46\x14\x25\x65\x08\x9a\x16\x08\xe9\x03\xa6\x8f\x40\x73\x30\x26\xb9\x25\x05\x5a\x0b\xb4\x28\x19\x16\xc8\xb5\x82\x82\x94\x25\xe5\xfb\x64\xe7\xe1\xef\x02\x3a\x50\xae\x51\xe6\x24\xc5\x64\x54\x13\x09\x3f\xfe\x9c\xb9\x86\x9b\x00\x6d\xec\xc8\x15\xf0\x11\x75\x97\xf0\x59\x64\xc8\xfe\x96\x31\xaf\x78\x0a\x33\x63\x92\x3b\x4c\x91\xd6\x28\xad\x85\x79\x20\x89\xce\xf0\x67\x9d\x2c\x30\x0f\xf0\x5a\x56\xa9\xfe\x40\x91\x65\x11\xcc\xba\xa8\xcf\x8e\x01\xa5\x14\x32\x02\x33\x02\x00\x50\x07\xaa\xd3\x07\xe8\x20\x92\x2d\xcf\xf0\xe7\xb7\xb7\xdf\xdb\x63\x63\x24\xe1\x7b\x84\x49\xe0\x70\x52\x77\xf4\xca\x69\x6e\x0c\xcd\x81\x0b\x7d\xcc\x49\xb6\x6a\xc7\x68\x8a\x7e\x22\x0e\x25\x25\x0a\xc1\x98\x49\x9f\xc5\xda\x15\x2c\x97\xbd\x78\xd3\xa2\xbf\xe3\x3e\x89\xba\x92\x1c\x2e\x32\x7c\x11\x5e\x32\xc7\x71\x63\x0c\xf2\xcc\x55\xe2\xcc\x70\x22\x5b\x72\x8e\x1d\x03\xa7\xac\x6d\x0d\x79\xd6\x34\xd0\xfe\xe1\xc3\x19\xe6\xa4\x62\x7a\x35\x2c\x82\xd3\x4e\x3a\x95\xdc\xe2\x21\x0f\xaa\x6e\x18\x51\x6a\xcb\x6b\xc2\x68\xd6\x09\xe3\x95\x8f\x61\x5c\x4a\x51\xd3\x0c\x33\xa0\xcd\x79\xd0\x79\x05\xd3\x37\x6a\x0a\xb9\x90\x50\xb8\xa9\xb8\xff\xef\xa7\xe3\x38\x24\xc4\xd0\x33\x40\xe4\xcb\xb1\xa3\xc6\x61\xbb\x57\x76\xd8\x10\xff\x69\x87\xc5\x4d\x0b\xd0\xb3\x59\xd4\x68\xf5\xcf\x5c\xd6\xe6\xbd\x9a\xd5\x68\xde\x76\xb1\x5e\xbb\x51\xb7\x85\x75\xdf\x73\x0e\x1c\x24\x3f\x6f\x43\x58\xf7\x8a\x79\x4f\x14\xde\xff\x2a\x9b\x1d\xd2\xc7\x42\xa6\xf0\xa5\x14\x9d\xd5\x4f\xd0\x4e\x9c\x7e\x6e\xf0\x10\xb6\xe0\x69\xfd\xde\x3c\xf6\xec\x70\xdd\x64\x66\x5a\x7c\x12\x07\x94\x1b\x52\x20\x83\x3e\x6f\xd4\xbc\xa8\xc1\x25\xf7\xee\xc4\xa3\xbb\xeb\x45\x4e\x66\xf3\xcb\xdd\x47\xef\x5c\xda\x50\xfb\x2b\xe5\x7c\x7a\x44\xf3\xe3\x92\x38\x2d\xed\x0a\x2d\x86\x9b\xe0\xda\x25\xf0\x95\xb0\x0a\x2f\x2d\x81\xc6\x68\xb5\x3b\x6e\xde\xbd\xdf\x03\xc1\xfb\xe7\xed\x8d\xdb\x27\x16\xbd\x64\x71\xfd\x07\x3b\xcb\xfd\x4e\x7b\xf1\x7f\x07\x00\x00\xff\xff\x0c\x06\xaf\xb9\xd2\x07\x00\x00")

func bindataTemplates08singlerelationertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates08singlerelationertmpl,
		"templates/08_single-relationer.tmpl",
	)
}



func bindataTemplates08singlerelationertmpl() (*asset, error) {
	bytes, err := bindataTemplates08singlerelationertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/08_single-relationer.tmpl",
		size: 2002,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1589204436, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates09multirelationertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x56\x5d\x6b\xe3\x38\x14\x7d\xf7\xaf\xb8\x1b\xba\x89\x1d\x1c\xa7\xfb\x1a\xc8\x42\xb7\xec\x0c\x85\xb6\x0c\x6d\x99\x97\x10\x8a\xc7\xbe\x6e\x45\x65\xc9\xc8\x4a\x3a\x45\xe8\xbf\x0f\xb2\x64\x27\xce\x47\x93\x86\x14\xda\x61\xfa\xd4\x58\xd6\xb9\xe7\x1e\xdd\x73\x2c\xa5\x52\xcc\x08\x43\xe8\xe4\x33\x2a\xc9\x40\x20\x8d\x25\xe1\x0c\x45\x07\x06\x5a\x7b\x4a\x0d\xe0\x84\xcf\x24\x8c\xc6\x10\x55\x4f\x86\x43\x38\xe7\x79\x41\x28\x82\x24\x39\x42\xf2\x88\xc9\x13\x64\x5c\x80\x7c\x44\xc8\xe3\xa2\x20\xec\x21\xba\x32\x68\x37\x0d\x18\x10\x26\x51\x64\x71\x82\x40\xf2\x82\x62\x8e\x4c\x56\x4b\x91\x37\x8f\x05\xdc\x6f\xdd\x37\x86\xae\x52\xd1\x75\x9c\xa3\xd6\x4a\x7b\xa6\xfa\x59\x9a\xd6\x2f\x5c\xf1\x14\xe9\x02\xb1\xdc\x5d\x3e\xf2\xb2\x19\x4b\xc0\x57\x2a\xba\xc1\x04\xc9\x1c\x85\xd6\xd0\x6f\x6a\x04\x6b\xf0\x7e\x2d\x09\xf4\x6b\xf4\x5b\x29\x66\x89\xfc\x42\x90\xa6\x21\xe4\x15\x87\xa6\xb0\xf9\x15\x00\x0a\xc1\x05\x28\x0f\x00\xa0\x7c\x26\x32\x79\x84\x1a\x26\xba\x60\x29\xfe\x9c\x9c\x4e\xdd\xb2\x52\x22\x66\x0f\x08\x27\x4d\x1d\x23\x75\x4d\xa1\x34\x9a\x2b\x45\xb2\xc5\x7a\x74\x51\xde\x52\x92\x60\x75\x1a\x06\x21\x89\x4b\x04\xa5\x4e\xda\x15\xb4\x1e\xc1\x70\xd8\x7a\x6e\x5b\xac\xf6\xd8\xca\x0b\x50\xb3\x64\x0a\xfb\x92\x5f\xf2\x67\x14\xe7\x71\x8e\x74\xa9\xe6\x7f\x71\x89\x77\x2f\x05\x06\x96\x4f\x6b\x9f\xd6\x21\xf0\x27\xb3\xbb\xd2\x22\xf2\xfb\xcb\x45\xeb\x9d\x5a\x07\x4d\x65\x92\xc1\x5f\xfc\xc9\x09\x50\xff\x09\x94\x33\xc1\xac\x74\x65\x74\x8d\xcf\x99\x5f\xab\x7a\x4e\xe3\xb2\xbc\x60\xf3\x98\x92\xe6\x70\xbe\xc7\x74\x86\x21\x74\x0a\xc1\xe7\x24\xc5\x14\x88\x5d\x87\xb9\x59\x00\xf9\x52\xe0\x08\x7a\x7f\xdf\xf5\xa0\x19\xce\xcc\x9c\xd8\x08\x7a\xeb\x9a\xf4\x3a\xee\x20\x17\x1c\x97\x75\x5a\x91\xff\x1b\xaf\xe6\xa9\x39\x00\xd7\x92\x52\xc6\x29\x4b\x73\x15\xad\x17\x82\xf1\x18\x18\xa1\x2b\xad\x4b\xcc\x0b\xa3\xdf\xf2\xfb\x56\x33\xa5\x5b\x2f\xee\x57\x02\xba\x06\x70\x63\x27\x80\x2c\x6d\xf1\xde\xda\x9c\xd6\x7d\xa5\x90\xa5\xd5\x71\xef\x53\x34\x2e\x0a\x64\xa9\xbf\x0d\xf0\x6d\x78\xa1\x25\xc6\xb8\x6c\x61\xfd\x4f\x31\xdf\x84\xd7\x1e\xc7\xc0\x19\xcb\xf5\xda\xfc\x53\x3d\x4e\x31\x8b\x67\x54\x8e\xbc\x03\xe7\xce\xd9\x7e\x7d\xee\x6a\x0e\x6e\xea\x9a\x44\xac\xf2\xa1\xd7\x24\xcc\xca\xa8\x59\x52\x8e\x03\x23\xd4\xb3\x21\xf7\x15\x65\x2b\x85\xca\x23\xa7\xdc\x1a\xfe\xeb\x31\x17\x80\x9f\x5b\x1a\x93\x69\x2b\xea\x42\xa3\x9b\xd5\x2e\xf8\xf8\x79\xb7\x02\xbb\x34\x4d\x2d\x4f\x98\xa3\xbb\xaf\x93\x7d\x34\x06\x4b\x78\x2f\x1b\xb4\x7d\xed\x34\x6b\xbc\x61\x7f\xbf\x1a\x35\x03\x40\x5a\xe2\x1a\x1d\xf2\x2e\x3c\xba\xfe\x3e\x60\x13\x32\x0d\xb6\x92\x35\x06\x3c\xc4\x6e\x8c\xd8\xd9\x39\x9e\xe7\x4a\xeb\xb9\xaa\x37\xeb\xc1\x4e\xd8\xbc\x60\xf2\x64\xa9\xcb\x0d\xde\xab\x35\xd9\xee\xc1\x33\xf9\xce\x26\x3c\x93\xbb\x2e\x1b\xc4\x4c\xba\x29\xb1\x30\xe4\xef\x63\xc7\xa3\x7f\x56\x0f\x19\xb5\x8a\x7c\x08\x1d\xab\xb4\xb9\xf9\xf2\x0c\x0a\x5e\x96\xe4\x07\x45\xeb\xc0\x08\xae\xdc\x8c\x39\x6a\x2e\xd8\x43\xa8\x4e\x69\x43\xcf\x9d\xcd\xf6\x59\xfd\x16\x93\xcc\x1d\xf0\xbf\x40\x91\x1d\xe9\x4b\x1a\xc0\x00\xfe\xf9\x54\xc2\x38\x76\xbb\x2f\x00\xdd\x46\x86\x6d\x42\xf9\x6f\x51\x6a\x3b\x4c\xe0\x50\x26\x55\xf3\x53\x1b\x12\x9f\x23\xf4\x56\xda\x7e\x6b\xf0\x5d\x22\x7b\xbf\xd0\xbb\x44\xb6\xf3\xda\x41\x98\x0c\xff\x04\x5a\x7b\x8c\x4e\x17\x03\xb8\x2b\x52\xdc\x8e\x23\xc6\xc9\xc1\xc3\x7f\xfa\x01\xbe\xf7\xda\x73\xad\xfe\x0a\x00\x00\xff\xff\x98\xbf\x73\xcd\xf8\x10\x00\x00")

func bindataTemplates09multirelationertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates09multirelationertmpl,
		"templates/09_multi-relationer.tmpl",
	)
}



func bindataTemplates09multirelationertmpl() (*asset, error) {
	bytes, err := bindataTemplates09multirelationertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/09_multi-relationer.tmpl",
		size: 4344,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1589214594, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates10modeldefinitiontmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8d\x31\x0e\xc2\x30\x0c\x45\x77\x4e\xf1\x95\xdd\x3d\x06\x1b\x0b\x9c\x20\x52\x7e\x90\x25\x27\xad\x42\x18\x50\xd4\xbb\xa3\x06\x94\x01\xd1\x6e\xb6\xff\xfb\xcf\xad\x09\x02\xa3\x66\xc2\xa5\x39\xd0\xa4\x6f\x5a\x75\xce\x0e\xb2\xae\xa7\xd6\x50\x99\x16\xf3\x95\x70\x4b\xd1\xe4\xcb\xcb\x61\x42\x8f\x34\x62\x3a\x2b\x2d\xb0\xe0\x97\x8d\x9f\xfb\x60\x05\xcc\x61\xb4\x6e\x9a\xef\xc6\x2b\xcd\x6f\xaf\xfe\xd4\x1f\x1d\x90\x32\x88\x1d\xd1\xe5\x69\x55\x0f\x3c\x69\xcb\x8f\x35\xdf\xe9\x1d\x00\x00\xff\xff\xdd\x47\x50\x16\x0c\x01\x00\x00")

func bindataTemplates10modeldefinitiontmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates10modeldefinitiontmpl,
		"templates/10_model-definition.tmpl",
	)
}



func bindataTemplates10modeldefinitiontmpl() (*asset, error) {
	bytes, err := bindataTemplates10modeldefinitiontmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/10_model-definition.tmpl",
		size: 268,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1589387066, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates11singlefilemodelstmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8f\xb1\x4e\x04\x21\x18\x84\xfb\x7d\x8a\x09\xb1\x85\xed\x2f\xb1\xf2\x2c\x2c\xbc\xb3\xd8\x17\x40\x99\x5b\x89\x0b\x6c\x00\x63\xcc\x1f\xde\xdd\x80\x97\xdc\x75\x13\x3e\xbe\x3f\x33\x22\x1a\x8e\x17\x1f\x09\x55\x7c\x5c\x37\xea\x8b\xdf\xa8\x43\x72\xdc\x8a\x82\x6e\x6d\x9a\x67\x3c\x25\x47\xac\x8c\xcc\xb6\xd2\xe1\xfd\x17\x91\xdf\x39\xc5\xf9\xfa\x96\xb2\xc1\xf1\x8c\xd3\x79\xc1\xf3\xf1\x65\x31\xdd\x59\x3e\x7d\x41\x3f\x86\x1f\x5b\xee\x64\x5b\x0f\x1d\x8b\xa0\xfa\xc0\x52\x6d\xd8\xd1\xda\x34\xed\xf6\xe3\xcb\xae\x84\x88\x79\xfb\x8f\x27\x1b\xd8\x89\x48\x65\xd8\x37\x5b\x09\xe5\xc3\x9e\x72\x2d\x0a\xa6\xb5\x49\x24\xdb\xb8\x12\x0f\xa3\x2e\x0e\x8f\x30\xaf\xa3\x38\x06\xbc\x59\x83\xeb\x31\xd4\x57\x9f\xa2\xba\x2a\xe3\x9b\x06\xa3\xbb\xa5\xbe\xf9\x2f\x00\x00\xff\xff\xd9\x1d\x25\x08\x17\x01\x00\x00")

func bindataTemplates11singlefilemodelstmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates11singlefilemodelstmpl,
		"templates/11_single-file-models.tmpl",
	)
}



func bindataTemplates11singlefilemodelstmpl() (*asset, error) {
	bytes, err := bindataTemplates11singlefilemodelstmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/11_single-file-models.tmpl",
		size: 279,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1589387471, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates12singlefilecollectionstmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x91\xb1\x6a\xf4\x30\x10\x84\x7b\x3f\xc5\x20\xfe\xe2\x4f\x21\x5d\x7f\x90\xea\x2e\x45\x9a\xbb\x14\x7e\x01\xc5\x5e\x3b\x4b\x64\xc9\x48\x3a\x42\xb2\xe8\xdd\x83\xec\x03\xbb\x09\x04\xd2\x2d\x3b\x9a\x4f\xb3\x8c\x88\x46\x4f\x03\x7b\x82\x4a\xec\x47\x47\x7a\x60\x47\xba\x0b\xce\x51\x97\x39\xf8\xa4\xa0\x4b\x69\x0e\x07\x9c\x42\x4f\x18\xc9\x53\xb4\x99\x7a\xbc\x7e\xc2\xd3\x2d\x06\x7f\xb8\xef\x42\x34\x38\x5f\x71\xb9\xb6\x78\x3a\x3f\xb7\xa6\x7a\xda\x37\x4e\xa8\x44\x7c\xd8\xb4\x33\xdb\x7c\xac\xb2\x08\x32\x4f\x94\xb2\x9d\x66\x94\xd2\x34\xb3\xed\xde\xed\x48\x10\x31\x2f\xeb\x78\xb1\x13\x55\x45\x24\xd3\x34\x3b\x9b\x09\x8a\xa7\x39\xc4\x9c\x14\x4c\x55\x86\x9b\xef\xc0\x9e\xf3\xff\x07\x48\x23\x12\xad\x1f\x09\xff\xb6\x13\x70\x7c\x84\x39\x6d\x17\xd5\x9f\xf6\xb8\xed\xa5\xae\x18\xb6\x8e\xbf\x28\xaa\x3d\x62\x71\x68\x90\xef\x4b\x69\x7e\xe3\xd6\x35\x55\x5d\x2a\x18\xac\xf9\xff\x92\x6b\xe9\x88\x57\xde\x4f\xb1\xee\xd3\x52\xd7\x77\x00\x00\x00\xff\xff\x4c\xb2\xbc\xf2\xd8\x01\x00\x00")

func bindataTemplates12singlefilecollectionstmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates12singlefilecollectionstmpl,
		"templates/12_single-file-collections.tmpl",
	)
}



func bindataTemplates12singlefilecollectionstmpl() (*asset, error) {
	bytes, err := bindataTemplates12singlefilecollectionstmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/12_single-file-collections.tmpl",
		size: 472,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1589402191, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates13collectiondefinitiontmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xca\xb1\x0a\x85\x30\x0c\x46\xe1\xbd\x4f\x11\xba\xf7\xbe\xd3\xb5\xfd\x85\x40\x6c\xa5\x26\x53\xc8\xbb\x8b\xe2\xe2\xe0\x76\x38\x7c\xee\x0d\x2b\x77\x50\xae\x43\x04\x55\x79\xf4\x72\x2f\xbe\x32\x53\x89\x48\xee\x8a\x6d\x97\xbf\xbe\xd9\xa1\xd3\xaa\xda\x44\xa6\x1f\x45\xa4\x2f\xb7\x18\x4b\xc3\x7c\x94\x7b\x21\xf4\x16\x71\x06\x00\x00\xff\xff\xd1\xbc\x4d\x93\x7b\x00\x00\x00")

func bindataTemplates13collectiondefinitiontmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates13collectiondefinitiontmpl,
		"templates/13_collection-definition.tmpl",
	)
}



func bindataTemplates13collectiondefinitiontmpl() (*asset, error) {
	bytes, err := bindataTemplates13collectiondefinitiontmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/13_collection-definition.tmpl",
		size: 123,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1589400990, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates14collectioninitializertmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\xd6\x55\x48\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\xce\xcf\xc9\x49\x4d\x2e\xc9\xcc\xcf\xd3\xcd\xcc\xcb\x2c\xc9\x4c\xcc\xc9\xac\x4a\x2d\x52\x52\xa8\xad\x55\x50\x50\x50\x88\x47\x48\x7b\x22\x64\x8b\x15\x6c\x15\x12\x0b\x0a\x52\xf3\x52\x34\x70\x28\xd0\x51\x40\x18\x56\x5d\xad\xe7\x0c\x57\xa4\x17\x96\x58\x94\x99\x98\x94\x93\xea\x97\x98\x9b\x5a\x5b\xab\xc9\x05\x72\x4b\x6a\x5e\x4a\x6d\x2d\x17\x20\x00\x00\xff\xff\x70\x57\x17\x2e\x96\x00\x00\x00")

func bindataTemplates14collectioninitializertmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates14collectioninitializertmpl,
		"templates/14_collection-initializer.tmpl",
	)
}



func bindataTemplates14collectioninitializertmpl() (*asset, error) {
	bytes, err := bindataTemplates14collectioninitializertmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/14_collection-initializer.tmpl",
		size: 150,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1589402149, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataTemplates15collectioninitializerfunctiontmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x50\xb1\x6e\xeb\x30\x0c\xdc\xf9\x15\xf7\x32\x25\x0f\x75\xb2\xb7\xf0\x14\x74\xe8\xd2\x1f\x28\x0a\xc3\xb0\xe9\x82\x80\x40\x05\xb4\x1c\xb4\x15\xf4\xef\x85\xdc\xd4\xd6\xd0\x64\x29\x07\x41\xe2\x1d\x4f\x77\x8c\xb1\xe7\x41\x94\xb1\xe9\xbc\x73\xdc\x05\xf1\x5a\x89\x4a\x90\xd6\xc9\x27\x5b\x35\x4c\x3a\x37\x37\xa8\x52\xa2\xf0\x71\x62\x34\x2b\xf5\x69\x65\x22\x33\xb7\x31\xca\x80\xfd\xe3\x7b\x60\xd3\xd6\x1d\xbd\x06\xcb\x64\x4b\xa9\xc3\xff\x6e\x79\xee\x57\x24\x46\xd6\x3e\xa5\x1d\xd8\xcc\x1b\xd1\xb9\xb5\x2b\x3f\x8c\x78\x79\xfd\x1d\x21\x3a\x1c\xf0\xcc\x93\x79\x6d\xd6\xf6\x71\xa1\x8e\xe8\x8a\xfb\xe0\x0d\x27\xf3\x67\xe9\xb9\x47\xe1\x89\x72\x82\x9b\x32\x7f\x89\xb7\x65\xb3\xef\x8c\x3b\x44\x02\x30\xfb\x68\xee\x50\x6c\x1b\xf7\x35\xac\xd5\xb7\x6b\x3b\x1e\x2f\x93\xb9\x64\xc8\x6a\xa8\xcb\xf9\x5b\xfe\x7e\x8c\x3c\xcc\x63\xff\x6a\xa8\xb8\x42\x2e\x97\x71\x98\x4c\x33\xbe\xb4\x13\xad\xe7\x05\x56\x71\x94\x28\xc6\x0a\xb3\xe0\x57\x00\x00\x00\xff\xff\xb5\xb5\x43\x14\x42\x02\x00\x00")

func bindataTemplates15collectioninitializerfunctiontmplBytes() ([]byte, error) {
	return bindataRead(
		_bindataTemplates15collectioninitializerfunctiontmpl,
		"templates/15_collection-initializer-function.tmpl",
	)
}



func bindataTemplates15collectioninitializerfunctiontmpl() (*asset, error) {
	bytes, err := bindataTemplates15collectioninitializerfunctiontmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "templates/15_collection-initializer-function.tmpl",
		size: 578,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1589402113, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}


//
// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
//
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
// nolint: deadcode
//
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

//
// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or could not be loaded.
//
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// AssetNames returns the names of the assets.
// nolint: deadcode
//
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

//
// _bindata is a table, holding each asset generator, mapped to its name.
//
var _bindata = map[string]func() (*asset, error){
	"templates/00_imports.tmpl":                         bindataTemplates00importstmpl,
	"templates/01_initialize_collections.tmpl":          bindataTemplates01initializecollectionstmpl,
	"templates/02_collection.tmpl":                      bindataTemplates02collectiontmpl,
	"templates/03_collection-structure.tmpl":            bindataTemplates03collectionstructuretmpl,
	"templates/04_collection-builder.tmpl":              bindataTemplates04collectionbuildertmpl,
	"templates/05_model.tmpl":                           bindataTemplates05modeltmpl,
	"templates/06_primary.tmpl":                         bindataTemplates06primarytmpl,
	"templates/07_fielder.tmpl":                         bindataTemplates07fieldertmpl,
	"templates/08_single-relationer.tmpl":               bindataTemplates08singlerelationertmpl,
	"templates/09_multi-relationer.tmpl":                bindataTemplates09multirelationertmpl,
	"templates/10_model-definition.tmpl":                bindataTemplates10modeldefinitiontmpl,
	"templates/11_single-file-models.tmpl":              bindataTemplates11singlefilemodelstmpl,
	"templates/12_single-file-collections.tmpl":         bindataTemplates12singlefilecollectionstmpl,
	"templates/13_collection-definition.tmpl":           bindataTemplates13collectiondefinitiontmpl,
	"templates/14_collection-initializer.tmpl":          bindataTemplates14collectioninitializertmpl,
	"templates/15_collection-initializer-function.tmpl": bindataTemplates15collectioninitializerfunctiontmpl,
}

//
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
//
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, &os.PathError{
					Op: "open",
					Path: name,
					Err: os.ErrNotExist,
				}
			}
		}
	}
	if node.Func != nil {
		return nil, &os.PathError{
			Op: "open",
			Path: name,
			Err: os.ErrNotExist,
		}
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}


type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{Func: nil, Children: map[string]*bintree{
	"templates": {Func: nil, Children: map[string]*bintree{
		"00_imports.tmpl": {Func: bindataTemplates00importstmpl, Children: map[string]*bintree{}},
		"01_initialize_collections.tmpl": {Func: bindataTemplates01initializecollectionstmpl, Children: map[string]*bintree{}},
		"02_collection.tmpl": {Func: bindataTemplates02collectiontmpl, Children: map[string]*bintree{}},
		"03_collection-structure.tmpl": {Func: bindataTemplates03collectionstructuretmpl, Children: map[string]*bintree{}},
		"04_collection-builder.tmpl": {Func: bindataTemplates04collectionbuildertmpl, Children: map[string]*bintree{}},
		"05_model.tmpl": {Func: bindataTemplates05modeltmpl, Children: map[string]*bintree{}},
		"06_primary.tmpl": {Func: bindataTemplates06primarytmpl, Children: map[string]*bintree{}},
		"07_fielder.tmpl": {Func: bindataTemplates07fieldertmpl, Children: map[string]*bintree{}},
		"08_single-relationer.tmpl": {Func: bindataTemplates08singlerelationertmpl, Children: map[string]*bintree{}},
		"09_multi-relationer.tmpl": {Func: bindataTemplates09multirelationertmpl, Children: map[string]*bintree{}},
		"10_model-definition.tmpl": {Func: bindataTemplates10modeldefinitiontmpl, Children: map[string]*bintree{}},
		"11_single-file-models.tmpl": {Func: bindataTemplates11singlefilemodelstmpl, Children: map[string]*bintree{}},
		"12_single-file-collections.tmpl": {Func: bindataTemplates12singlefilecollectionstmpl, Children: map[string]*bintree{}},
		"13_collection-definition.tmpl": {Func: bindataTemplates13collectiondefinitiontmpl, Children: map[string]*bintree{}},
		"14_collection-initializer.tmpl": {Func: bindataTemplates14collectioninitializertmpl, Children: map[string]*bintree{}},
		"15_collection-initializer-function.tmpl": {Func: bindataTemplates15collectioninitializerfunctiontmpl, Children: map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
